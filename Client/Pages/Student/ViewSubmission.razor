@page "/student/viewsubmission"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject AuthenticationStateProvider _authenticationStateProvider
@attribute [Authorize(Roles = "Administrators, Students")]

<h4>View your tests</h4>

<div class="table-responsive">
    <table class="table table-hover">
        <thead class="thead-dark">
            <tr>
                <th>Exam Name</th>
                <th>Exam Code</th>
                <th>Question Total</th>
                <th>Date Submitted</th>
                <th>Mark</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var StudentExam in StudentExams)
            {

            <tr>
                @foreach (var ExamDummy in Exams)
                {
                    if (ExamDummy.ExamId == StudentExam.ExamId)
                    {
                        <td>@ExamDummy.ExamName</td>
                        <td>@ExamDummy.ExamCode</td>
                        <td>@ExamDummy.QuestionAmount</td>
                        <td>@StudentExam.Date.ToShortDateString()</td>
                        <td>@StudentExam.Mark</td>
                    }
                }
            </tr>
            }
        </tbody>
    </table>
</div>

@code {
    private List<StudentExam> StudentExams = new List<StudentExam>();
    private List<Exam> Exams = new List<Exam>();

    protected override async Task OnInitializedAsync()
    {
        var user = (await _authenticationStateProvider.GetAuthenticationStateAsync()).User;
        var UserId = user.FindFirst(u => u.Type.Contains("nameidentifier"))?.Value;
        try
        {

            StudentExams = await Http.GetFromJsonAsync<List<StudentExam>>("/api/StudentExams");
            foreach (var ex in StudentExams)
            {
                if (ex.StudentId != Guid.Parse(UserId))
                {
                    StudentExams.Remove(ex);
                }
            }

        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
        catch (Exception e)
        {

        }

    }
}
